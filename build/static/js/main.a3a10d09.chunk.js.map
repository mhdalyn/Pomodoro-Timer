{"version":3,"sources":["utils/duration/index.js","pomodoro/session.js","pomodoro/stopButton.js","pomodoro/durationAdjuster.js","pomodoro/Pomodoro.js","utils/class-names/index.js","utils/useInterval/index.js","App.js","index.js"],"names":["minutesToDuration","givenMinutes","minutes","Math","floor","toString","padStart","Session","session","duration","progress","timeRemaining","toFixed","progressPercent","className","data-testid","label","givenSeconds","seconds","round","secondsToDuration","style","height","role","aria-valuemin","aria-valuemax","aria-valuenow","width","StopButton","stopSession","type","title","onClick","disabled","DurationAdjuster","increaseTimer","decreaseTimer","nextTick","prevState","max","Pomodoro","classNameToBoolean","useState","isTimerRunning","setIsTimerRunning","setSession","focusDuration","setFocusDuration","breakDuration","setBreakDuration","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","Audio","play","currentSession","nextSession","min","aria-label","nextState","prevStateSession","oi","Object","entries","reduce","classes","value","concat","undefined","filter","join","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3a10d09.chunk.js","sourcesContent":["/**\n * Formats a number of minutes as 'mm:00'.\n *\n * For example,\n *    minutesToDuration(3) = '03:00'\n *    minutesToDuration(45) = '45:00'\n *\n * @param givenMinutes\n *    the number of minutes in the duration\n * @returns {string}\n *    the given minutes formatted as 'mm:00'\n */\n\nexport function minutesToDuration(givenMinutes) {\n  const minutes = Math.floor(givenMinutes).toString().padStart(2, \"0\");\n  return `${minutes}:00`;\n}\n\n/**\n * Formats a number of seconds as 'mm:ss'.\n *\n * For example,\n *    secondsToDuration(305) = '05:05'\n *    secondsToDuration(930) = '15:30'\n *\n * @param givenSeconds\n *    the number of seconds in the duration\n * @returns {string}\n *    the given seconds formatted as 'mm:ss'\n */\n\nexport function secondsToDuration(givenSeconds) {\n  const minutes = Math.floor((givenSeconds % 3600) / 60)\n    .toString()\n    .padStart(2, \"0\");\n  const seconds = Math.round(givenSeconds % 60)\n    .toString()\n    .padStart(2, \"0\");\n  return `${minutes}:${seconds}`;\n}\n","import React from \"react\";\r\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\r\n\r\nfunction Session ({session, duration}) {\r\n\r\n    if (session === null) {\r\n        return null;\r\n    } else {\r\n      const elapsedTime = duration*60-session.timeRemaining;\r\n      const progress = ((elapsedTime / (duration*60)) * 100).toFixed();\r\n      const progressPercent = progress + \"%\"\r\n    return (<><div className=\"row mb-2\">\r\n    <div className=\"col\">\r\n      {/*current session (Focusing or On Break) total duration */}\r\n      <h2 data-testid=\"session-title\">\r\n        {session.label} for {minutesToDuration(duration)} minutes\r\n      </h2>\r\n      {/*format the time remaining in the current session */}\r\n      <p className=\"lead\" data-testid=\"session-sub-title\">\r\n        {secondsToDuration(session.timeRemaining)} remaining\r\n      </p>\r\n    </div>\r\n  </div>\r\n          <div className=\"row mb-2\">\r\n          <div className=\"col\">\r\n            <div className=\"progress\" style={{ height: \"20px\" }}>\r\n              <div\r\n                className=\"progress-bar\"\r\n                role=\"progressbar\"\r\n                aria-valuemin=\"0\"\r\n                aria-valuemax=\"100\"\r\n                aria-valuenow={progress} // TODO: Increase aria-valuenow as elapsed time increases\r\n                style={{ width: progressPercent }} // TODO: Increase width % as elapsed time increases\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n  </>)}\r\n}\r\nexport default Session;","import React from \"react\";\r\n\r\nfunction StopButton({session, stopSession}) {\r\n    return (<button\r\n    type=\"button\"\r\n    className=\"btn btn-secondary\"\r\n    data-testid=\"stop\"\r\n    title=\"Stop the session\" \r\n    onClick={stopSession}\r\n    disabled={!session}\r\n  >\r\n    <span className=\"oi oi-media-stop\" />\r\n  </button>)\r\n  \r\n}\r\n\r\nexport default StopButton;\r\n","import React from \"react\";\r\nimport { minutesToDuration } from \"../utils/duration\";\r\n\r\nfunction DurationAdjuster({label, duration, increaseTimer, decreaseTimer, session}) {\r\n   if (label === \"Focus\") {\r\n    return (<div className=\"col\">\r\n    <div className=\"input-group input-group-lg mb-2\">\r\n      <span className=\"input-group-text\" data-testid=\"duration-focus\">\r\n        {/*display the current focus session duration */}\r\n        Focus Duration: {minutesToDuration(duration)}\r\n      </span>\r\n      <div className=\"input-group-append\">\r\n        {/*Implement decreasing focus duration and disable during a focus or break session */}\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary\"\r\n          data-testid=\"decrease-focus\"\r\n          disabled={session}\r\n          onClick={decreaseTimer}\r\n        >\r\n          <span className=\"oi oi-minus\" />\r\n        </button>\r\n        {/*Implement increasing focus duration  and disable during a focus or break session */}\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary\"\r\n          data-testid=\"increase-focus\"\r\n          disabled={session}\r\n          onClick={increaseTimer}\r\n        >\r\n          <span className=\"oi oi-plus\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n    )\r\n   } else {\r\n    return (<div className=\"col\">\r\n    <div className=\"float-right\">\r\n      <div className=\"input-group input-group-lg mb-2\">\r\n        <span className=\"input-group-text\" data-testid=\"duration-break\">\r\n          {/*display the current break session duration */}\r\n          Break Duration: {minutesToDuration(duration)}\r\n        </span>\r\n        <div className=\"input-group-append\">\r\n          {/*Implement decreasing break duration and disable during a focus or break session*/}\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary\"\r\n            data-testid=\"decrease-break\"\r\n            disabled={session}\r\n            onClick={decreaseTimer}\r\n          >\r\n            <span className=\"oi oi-minus\" />\r\n          </button>\r\n          {/*Implement increasing break duration and disable during a focus or break session*/}\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary\"\r\n            data-testid=\"increase-break\"\r\n            disabled={session}\r\n            onClick={increaseTimer}\r\n          >\r\n            <span className=\"oi oi-plus\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n    )\r\n   }\r\n}\r\n\r\nexport default DurationAdjuster;","import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport Session from \"./session\";\nimport StopButton from \"./stopButton\";\nimport DurationAdjuster from \"./durationAdjuster\";\n\n// These functions are defined outside of the component to insure they do not have access to state\n// and are, therefore more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\nfunction nextTick(prevState) {\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n  return {\n    ...prevState,\n    timeRemaining,\n  };\n}\n\n/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return (currentSession) => {\n    if (currentSession.label === \"Focusing\") {\n      return {\n        label: \"On Break\",\n        timeRemaining: breakDuration * 60,\n      };\n    }\n    return {\n      label: \"Focusing\",\n      timeRemaining: focusDuration * 60,\n    };\n  };\n}\n\n\n\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  // The current session - null where there is no session running\n  const [session, setSession] = useState(null);\n\n  // Allow the user to adjust the focus and break duration.\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  function IncreaseFocus() {\n    setFocusDuration(Math.min(focusDuration+5,60))\n  }\n  \n  function DecreaseFocus() {\n    setFocusDuration(Math.max(focusDuration-5,5))\n  }\n  \n  function IncreaseBreak() {\n    setBreakDuration(Math.min(breakDuration+1,15))\n  }\n  \n  function decreaseBreak() {\n    setBreakDuration(Math.max(breakDuration-1,1))\n  }\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You will not need to make changes to the callback function\n   */\n  useInterval(\n    () => {\n      if (session.timeRemaining === 0) {\n        new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n        return setSession(nextSession(focusDuration, breakDuration));\n      }\n      return setSession(nextTick);\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n  function playPause() {\n    setIsTimerRunning((prevState) => {\n      const nextState = !prevState;\n      if (nextState) {\n        setSession((prevStateSession) => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession === null) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60,\n            };\n          }\n          return prevStateSession;\n        });\n      }\n      return nextState;\n    });\n  }\n  function stopSession() {\n    setSession(null);\n    setIsTimerRunning(false);\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <DurationAdjuster label=\"Focus\" duration={focusDuration} increaseTimer={IncreaseFocus} decreaseTimer={DecreaseFocus} session={session} />\n        <DurationAdjuster label=\"Break\" duration={breakDuration} increaseTimer={IncreaseBreak} decreaseTimer={decreaseBreak} session={session} />\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/*Implement stopping the current focus or break session. and disable the stop button when there is no active session */}\n            <StopButton session={session} stopSession={stopSession} />\n          </div>\n        </div>\n      </div>\n      <div>\n        {/*This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\n        <Session\n          session={session}\n          duration={\n            session?.label === \"Focusing\" ? focusDuration : breakDuration\n          }\n        />\n\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n","/**\n * Use this function to dynamically assign the className property of react components.\n *\n * Usage:\n *\n *  <span className={classNames({\n *               \"oi\": true,\n *               \"oi-media-play\": currentState.isPaused,\n *               'oi-media-pause': !currentState.isPaused\n *             })}/>\n *\n *   if currentState.isPaused === true, the className will be \"oi oi-media-play\" otherwise it will be \"oi oi-media-pause\"\n *\n * @param classNameToBoolean\n *    a map of a class name to a boolean value. If the boolean value is `true`, the class name is included, otherwise it is excluded.\n * @returns {string}\n *    a space delimited string of the class names which have a value of `true`.\n */\nexport default function classNames(classNameToBoolean) {\n  return Object.entries(classNameToBoolean)\n    .reduce(\n      (classes, [className, value]) =>\n        classes.concat(value ? className : undefined),\n      []\n    )\n    .filter((className) => className !== undefined)\n    .join(\" \");\n}\n","// This custom hook is from: https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n\nimport { useEffect, useRef } from \"react\";\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Pomodoro from \"./pomodoro/Pomodoro\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header container\">\n        <h1>Pomodoro Timer</h1>\n      </header>\n      <div className=\"container\">\n        <Pomodoro />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}